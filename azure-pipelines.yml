# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.14' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code



jobs:

# All tasks on Windows
- job: build_all_windows
  displayName: Build all tasks (Windows)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Windows_NT'))
  pool:
    vmImage: vs2017-win2016
  timeoutInMinutes: 90
  steps:
  - template: ci/build-all-steps.yml
    parameters:
      os: Windows_NT

# Publish on Windows
- job: publish_windows
  displayName: Publish
  dependsOn: 
  - build_all_windows
  condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), eq(variables.os, 'Windows_NT'))
  pool:
    vmImage: vs2017-win2016
  steps:
  - template: ci/publish-steps.yml

# Courtesy push on Windows
- job: courtesy_push_windows
  displayName: Courtesy Push
  dependsOn: 
  - publish_windows
  condition: and(succeeded(), in(variables['build.reason'], 'Schedule', 'Manual'), eq(variables['COURTESY_PUSH'], 'true'))
  pool:
    vmImage: vs2017-win2016
  steps:
  - checkout: AzureDevOps
    fetchDepth: 1
    persistCredentials: true
  - checkout: self
  - template: ci/courtesy-push.yml

# All tasks on Linux
- job: build_all_linux
  displayName: Build all tasks (Linux)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Linux'))
  pool:
    vmImage: ubuntu-16.04
  steps:
  - template: ci/build-all-steps.yml
    parameters:
      os: Linux

# All tasks on macOS
- job: build_all_darwin
  displayName: Build all tasks (macOS)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Darwin'))
  pool:
    vmImage: macos-10.15
  steps:
  - template: ci/build-all-steps.yml
    parameters:
      os: Darwin

# Single task
- job: buildSingle
  displayName: Build single task
  condition: and(succeeded(), variables.task)
  steps:
  - template: ci/build-single-steps.yml

- job: buildSharedNpm_win
  displayName: Build shared npm packages (Win)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Windows_NT'))
  pool:
    vmImage: vs2017-win2016
  steps:
  - template: ci/build-common-npm.yml

- job: buildSharedNpm_linux
  displayName: Build shared npm packages (Linux)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Linux'))
  pool:
    vmImage: ubuntu-16.04
  steps:
  - template: ci/build-common-npm.yml

- job: buildSharedNpm_darwin
  displayName: Build shared npm packages (macOS)
  condition: and(succeeded(), not(variables.task), eq(variables.os, 'Darwin'))
  pool:
    vmImage: macos-10.15
  steps:
  - template: ci/build-common-npm.yml
